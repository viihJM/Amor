// Esperar at√© que o DOM esteja completamente carregado
document.addEventListener('DOMContentLoaded', function() {
    // Configurar a data do anivers√°rio (20 de mar√ßo de 2025)
    const birthday = new Date("March 20, 2025 00:00:00").getTime();
    
    // Bot√£o de iniciar - COLOCADO NO IN√çCIO PARA GARANTIR QUE SEJA CONFIGURADO LOGO
    const startButton = document.getElementById("startButton");
    if (startButton) {
        startButton.addEventListener("click", function() {
            const intro = document.getElementById("intro");
            const mainContent = document.getElementById("mainContent");
            
            if (intro && mainContent) {
                intro.classList.add("hidden");
                mainContent.classList.remove("hidden");
                createHearts();
                startCountdown();
            } else {
                console.error("Elementos intro ou mainContent n√£o encontrados");
            }
        });
    } else {
        console.error("Bot√£o de in√≠cio n√£o encontrado");
    }
    
    // Bot√£o de mensagem especial
    const messageButton = document.getElementById("messageButton");
    if (messageButton) {
        messageButton.addEventListener("click", function() {
            alert("Voc√™ √© a raz√£o do meu sorriso todos os dias. Eu te amo mais do que as palavras podem expressar. Feliz anivers√°rio, meu amor!");
        });
    }
    
    // Lista de elogios para exibir em rota√ß√£o
    const compliments = [
        "Lindo",
        "Maravilhoso",
        "Incr√≠vel",
        "Carinhoso",
        "Inteligente",
        "Especial",
        "Engra√ßado",
        "Dedicado",
        "Apaixonante",
        "Perfeito",
        "Ador√°vel",
        "√önico",
        "Encantador",
        "Meu Amor",
        "Meu Tudo",
        "Meu Pr√≠ncipe",
        "Meu Mundo"
    ];
    
    // Fun√ß√£o para mostrar elogios em rota√ß√£o
    let complimentIndex = 0;
    const complimentsElement = document.getElementById("compliments");
    
    function showNextCompliment() {
        if (complimentsElement) {
            complimentsElement.style.opacity = 0;
            
            setTimeout(() => {
                complimentsElement.textContent = compliments[complimentIndex];
                complimentsElement.style.opacity = 1;
                complimentIndex = (complimentIndex + 1) % compliments.length;
            }, 500);
        }
    }
    
    // Iniciar rota√ß√£o de elogios
    if (complimentsElement) {
        showNextCompliment();
        setInterval(showNextCompliment, 2000);
    }
    
    // Fun√ß√£o da contagem regressiva
    function startCountdown() {
        const countdownInterval = setInterval(function() {
            // Data e hora atuais
            const now = new Date().getTime();
            
            // Dist√¢ncia entre agora e a data do anivers√°rio
            const distance = birthday - now;
            
            // C√°lculos de tempo para dias, horas, minutos e segundos
            const days = Math.floor(distance / (1000 * 60 * 60 * 24));
            const hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
            const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
            const seconds = Math.floor((distance % (1000 * 60)) / 1000);
            
            // Exibir o resultado nos elementos com IDs correspondentes
            const daysElement = document.getElementById("days");
            const hoursElement = document.getElementById("hours");
            const minutesElement = document.getElementById("minutes");
            const secondsElement = document.getElementById("seconds");
            
            if (daysElement) daysElement.textContent = days.toString().padStart(2, '0');
            if (hoursElement) hoursElement.textContent = hours.toString().padStart(2, '0');
            if (minutesElement) minutesElement.textContent = minutes.toString().padStart(2, '0');
            if (secondsElement) secondsElement.textContent = seconds.toString().padStart(2, '0');
            
            // Se a contagem regressiva terminar
            if (distance < 0) {
                clearInterval(countdownInterval);
                const messageElement = document.querySelector(".message");
                const titleElement = document.querySelector("h1");
                const countdownNumbers = document.querySelectorAll(".countdown-number");
                
                if (messageElement) messageElement.textContent = "FELIZ ANIVERS√ÅRIO MEU AMOR!!! ‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è";
                if (titleElement) titleElement.textContent = "Hoje √© seu dia!";
                countdownNumbers.forEach(item => {
                    item.textContent = "00";
                });
            }
        }, 1000);
    }
    
    // Criar cora√ß√µes flutuantes
    function createHearts() {
        const heartsContainer = document.getElementById("hearts");
        if (!heartsContainer) return;
        
        const heartSymbols = ["‚ù§Ô∏è", "üíñ", "üíï", "üíò", "üíì", "üíó", "üíû"];
        
        setInterval(() => {
            const heart = document.createElement("div");
            heart.classList.add("heart");
            heart.textContent = heartSymbols[Math.floor(Math.random() * heartSymbols.length)];
            
            // Posi√ß√£o inicial aleat√≥ria na base da tela
            const left = Math.random() * 100;
            heart.style.left = `${left}%`;
            
            // Velocidade e tamanho aleat√≥rios
            const duration = 5 + Math.random() * 5;
            const size = 0.5 + Math.random() * 1.5;
            heart.style.fontSize = `${size}rem`;
            heart.style.animationDuration = `${duration}s`;
            
            heartsContainer.appendChild(heart);
            
            // Remover o cora√ß√£o ap√≥s a anima√ß√£o terminar
            setTimeout(() => {
                if (heart.parentNode === heartsContainer) {
                    heartsContainer.removeChild(heart);
                }
            }, duration * 1000);
        }, 300);
    }
});